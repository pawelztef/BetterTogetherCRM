***************************** Application  Notes    ************************************

How to store Passwords during Deploy?

Do I ned to specify ruby version in rbenv app file?


!!!!! Backlog !!!!!!!

  Use Cases
  Style gritter messages
  Fix validation in simple-form for login page as well require hints
  Capitalize when adding email adress on users and volunteers
  right menu doesn't work ? 
  add to users model phone attribute
  Assets on Heroku
  Dog validation  for uniqueness 
  extract helper fullname methods for models user/volunteeer/client 



  ???  b) dog association to location ???
  fullname method for client 
  extract full name method from models
  links to show view from edit view both Clients and Dogs
  Ajax editing from show view in modal

  !!!!!!!!! BUG !!!!!!!!!!!!!!!
    problem with modal 
    showing the same results
    on many modals
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  



!!!!!!!!!!!!!!!!!!!!!



***************************** Application todo list ************************************

+ 1 Implement adding removing and editing users
  + a) basic views 
  +     seed +
  +     index +
  +     show  ---- DECIDE that is necessary
  +     edit + 
  +     delete +
  +     create +

  + b) implement validation 

  + c) implement errors
  +     with javascript
  +     -validation from users from added
  +     gem simple-form
  +     -validation for flash messages added
  +     gem gritter
     

+ 2 Implement session management as a authentication

+ 3 Implement basic autorization
      + a) Owner can add remove new users
      + b) User can eddit his passwords proper validation should be presented
      + c) proper links should be implemented 

+ 4 Add volunteer model and views etc.
  + a) adding scaffold

  + b) add validation 
      + - database  validation
      + - model validation
      + - form validation errors through simple_form gem
      + - refactor flash messages in volunteer_controller

  + c) ensure about authentication
      + - refresh that was learned about authentication and authorization
      +   How it works? hmm?

+ 5 Create Group.
  +  a) adding scaffold

     b) add validation 
      +  - database  validation
      +  - model validation
      +  - form validation errors through simple_form gem
      +  - refactor flash messages in volunteer_controller

+ 6 Associate between group and volunteer

    + PRIMO - update to seeds data

    + a) particular group sub-page (show) display all belonging volnteers
    + b) vulunteer form allows to assign to group
    + c) group can't be deleted if not empty
    + d) delete volunteer removing his membership in group
    + e) volunteers index

+ 7 add location model

    ** testing added ***

    + a) add a geolocation fundation
    +    - create model
    +    - add validation
    +    - install gem geocoder
    +    - add full_street_address method
        
    + b) associate location model with user and volunteer
    +    - add polymorphic assotiation
    +    - update views

+ 9 Validation for uniqueness
+ 10 OPTIONAL some tests
+ 11 add indexes on models
+ 12 add prototype of navigation
     + set color anchors 
     + basic mixins 

+ 13 Heroku First Deploy
  
  14 add rest models
     a) dogs with assotiation to owner/client
  +      -design
            *what type is the best for repersenting sex of animal
  +      -implement
  +         *validation for first_name ,last_name, email, phone1, intitution
  +         *validation for name, gender, age, breed
  +      -set new test environment
  +      -test
  +      -seed data


  +  c) client assocaition to location

  +  d) donations model
  +     -desing 
        -transaction id? check this
  +     -implement
  +     -test
  +     -seed data

  15 add controllers an views

     a) prepare controller/views for clients aka dog owners 
  +     - desing 
            add scope to clients to retrieve only dog owners
  +     - implement
        - test
        - documentation

     b) prepare controller/views for dogs
  +     - desing 
  +     - implement
        - test
     c) prepare controller/views for donations
        - desing 
          add scope to client model to retrive only donators
          views and controllers should be part of business namespace
        - implement
        - test

  16 deploy
       _ assets on heroku

  17 events with assotiation to polymorphic assotiation participators
     a)  create model fro events
  +     -design
            few static types of events 
              e.g. dog transfer
                   training 
                   visit
        -implement
        -test
        -seed data
     b) prepare controller/views for clients 
        - desing 
        - implement
        - test
      
  17 Documentation/Design of Bookkeeping
    
    
    
     
    
  



***************************** Application Details ************************************

* Ruby version
   -----2.2.3p173-------      
    changed to 
    2.2.5 because testing

* Rails version
    4.2.5 

* System dependencies

   to do not run bundle exec use rbenv plugin called rbenv-binstubs and run in application 
   folder command: 
   bundle install --binstubs .bundle/bin

* Configuration

    --Simple_form gem--
      after bundle  install ** rails g simple_form:install --bootstrap **

* Database creation

      

* Database initialization



* How to run the test suite
                                                                                                                      All guides from Hartl book
                                                                                                                      - add into test_helper.rb
                                                                                                                          require "minitest/reporters"
                                                                                                                          Minitest::Reporters.use!
                                                                                                                      - add into config/initializers/bactrace_silencers.rb
                                                                                                                          Rails.backtrace_cleaner.add_silencer  { |line|  line  =~  /rvm/ }
                                                                                                                      - add  line into Guardfile
                                                                                                                        guard :minitest,  spring: true, all_on_start: false do

  Rspec-guard run:
    $ bundle exec gruard init rspec

  Rspec run:
    $ rails generate rspec:install
  to run test run:
    $ bundle exec rspec 
    $ rspec



* Services (job queues, cache servers, search engines, etc.)

  * Deployment instructions

    download and install heroku CLI
    
    add gems to :production group
      gem 'pg','0.17.1'
      gem 'rails_12factor', '0.0.2'

    run:
     $ bundle install --without production

    add settings for serving assets on production in config/application.rb
      config.serve_static_assets = true

    run commands in terminal 
      $ heroku version
      $ heroku login
      $ heroku keys:add
      $ heroku create
      $ git push heroku master
      $ heroku rename <appName>
      $ haeroku rake db:migrate
      $ heroku rake db:seed
      $ heroku open
    
    

